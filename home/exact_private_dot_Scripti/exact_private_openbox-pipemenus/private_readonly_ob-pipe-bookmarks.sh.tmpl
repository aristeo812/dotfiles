#!/bin/bash
# vim ft=bash
# This is a bash script! Because of handy urldecode substitution (see below)

filemanager='xdg-open'
bookmarks_file={{ joinPath .chezmoi.homeDir ".config/gtk-3.0/bookmarks" | squote }}
user_dirs_file={{ joinPath .chezmoi.homeDir ".config/user-dirs.dirs" | squote }}

# First item is always our home folder
echo "<openbox_pipe_menu><item label='Home Directory' icon='{{ template "obmenuIcons" . }}/places/folder-home.{{ .gtk.iconExt }}'><action name='Execute'><execute><command><![CDATA[$filemanager {{ .chezmoi.homeDir }}]]></command></execute></action></item>"

# If bookmarks file exists, show its contents
if [[ -r "$bookmarks_file" ]] ; then

    echo '<separator />'
    [[ -r "$user_dirs_file" ]] && . "$user_dirs_file"

    for bookmark in $(sed 's/[ ][^ ]*$//' "$bookmarks_file") ; do
        item_name=$(basename "$bookmark")

        # Performing urldecode
        # See: https://unix.stackexchange.com/questions/159253/decoding-url-encoding-percent-encoding
        # For a function approach,
        # See: https://stackoverflow.com/questions/6250698/how-to-decode-url-encoded-string-in-shell
        decoded_name=$(item_name=${item_name//+/ }; printf "${item_name//%/\\x}")

        # Choose a menu icon and select special icons for special folders
        case "$bookmark" in
            "file://$XDG_DOCUMENTS_DIR")
                icon_name='folder-documents'
                ;;
            "file://$XDG_DOWNLOAD_DIR")
                icon_name='folder-download'
                ;;
            "file://$XDG_PICTURES_DIR")
                icon_name='folder-pictures'
                ;;
            *)
                icon_name='folder'
                ;;
        esac

        echo "<item label='$decoded_name' icon='{{ template "obmenuIcons" . }}/places/$icon_name.{{ .gtk.iconExt }}'><action name='Execute'><execute><command><![CDATA[$filemanager '$bookmark']]></command></execute></action></item>"
    done

fi

echo '</openbox_pipe_menu>'
