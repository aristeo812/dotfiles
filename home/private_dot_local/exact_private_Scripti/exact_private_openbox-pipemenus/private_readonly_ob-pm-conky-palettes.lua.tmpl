#!/usr/bin/lua
-- chezmoi:template: left-delimiter=@'{# right-delimiter=#}'@
-- vim: ft=lua

dofile(@'{# joinPath .chezmoi.homeDir ".config/conky/conky-palettes.lua" | squote #}'@)

@'{#/* Template which adds the lookup_icon function and initializes Gtk */ -#}'@
@'{# template "gtkLookupIcon.lua" . #}'@

-- Sort keys of the conky_palettes table
local tkeys = {}
for k in pairs(conky_palettes) do table.insert(tkeys, k) end
table.sort(tkeys)

print('<openbox_pipe_menu>')

for k in pairs(tkeys) do
    local palette_name = tkeys[k]
    local icon_name, the_command, second_command

    if palette_name == @'{# .conky.currentPalette | quote #}'@ then
        the_command = "notify-send 'Current conky palette: @'{# .conky.currentPalette #}'@'"
        second_command = ''
        icon_name = " icon='" .. tostring(lookup_icon(Gtk, gtk_icon_theme, 'emblem-ok-symbolic', @'{# .varia.obmenuIconSize #}'@)) .. "'"
    else
        the_command = "/usr/bin/python3 @'{# .sysDirs.scripts #}'@/tinker-chezmoi-config.py 'data.conky.currentPalette' '" .. palette_name .. "' doapply"
        second_command = "notify-send \"Changing conky's palette to " .. palette_name .. "\" 'Please wait a little bit...' "
        icon_name = ""
    end

    print([[<item label=']] .. palette_name .. [[']] .. icon_name .. [[>
    <action name='Execute'>
        <execute><command><![CDATA[]] .. the_command .. ']]' .. [[></command></execute>
    </action>]]);

    if second_command ~= '' then
        print([[    <action name='Execute'>
        <execute><command><![CDATA[]] .. second_command .. ']]' .. [[></command></execute>
    </action>]]);
    end

    print('</item>');
end

print('</openbox_pipe_menu>')

conky_palettes = nil
